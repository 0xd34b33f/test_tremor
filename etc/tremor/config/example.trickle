define script validate
script
  match {"raw": event} of 
    case %{raw ~= glob|<134>*|} =>
      emit event => "ok" #testing, that string is syslog with needed facility
    default =>
      emit event => "invalid"
  end
end;
define script tokenize_audit_messages
script
  match {"raw": event} of
    # can do syslog validate (from above) and parse in one step too
    #case r = %{raw ~= dissect|<134>%{} : %{hostname} %{}|} => r.raw
    case r = %{raw ~= dissect|%{} : %{hostname} %{?audisp} %{node} %{type} %{msg}: %{pid} %{uid} %{} %{auid} %{tty} %{} %{ses} %{res} %{pkt_stc}|} => r.raw
    default => emit ["invalid", event] => "invalid"
  end
end;

create script validate;
create script tokenize_audit_messages;


select event from in into validate;
select event from validate/ok into tokenize_audit_messages;

select event from tokenize_audit_messages into out;
select event from validate/invalid into out;
select event from tokenize_audit_messages/invalid into out;
